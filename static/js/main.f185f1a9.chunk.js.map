{"version":3,"sources":["counter.tsx","clicker.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counter","props","className","counter","Clicker","onClick","increase","disabled","count","reset","App","useState","setCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAaeA,G,KAPC,SAACC,GACb,OAAO,8BACH,qBAAKC,UAAU,UAAf,SACI,qBAAKA,UAA6B,IAAlBD,EAAME,QAAgB,WAAa,QAAnD,SAA6DF,EAAME,gBCgBhEC,EAlBC,SAACH,GACb,OAAO,sBAAKC,UAAU,UAAf,UAEH,8BACI,wBAAQG,QAASJ,EAAMK,SAAUC,SAAUN,EAAMO,OAAS,EAClDN,UAAU,SADlB,mBAIJ,8BACI,wBAAQG,QAASJ,EAAMQ,MAAOF,SAA0B,IAAhBN,EAAMO,MACtCN,UAAU,WADlB,yBCOGQ,MAlBf,WAAgB,IAAD,EACaC,mBAAiB,GAD9B,mBACNH,EADM,KACCI,EADD,KASX,OAAQ,sBAAKV,UAAU,OAAf,UACA,cAAC,EAAD,CAASC,QAASK,IAClB,cAAC,EAAD,CAASF,SATL,WACRM,EAASJ,EAAQ,IAQWC,MANlB,WAEVG,EAAS,IAIiCJ,MAAOA,QCF1CK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f185f1a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\n\r\ntype TypeCouneter = {\r\n    counter: number\r\n}\r\nconst Counter = (props: TypeCouneter) => {\r\n    return <div>\r\n        <div className='counter'>\r\n            <div className={props.counter === 5 ? 'countRed' : 'count'}>{props.counter}</div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Counter;","import React from \"react\";\r\n\r\ntype TypeClicker = {\r\n    increase: () => void\r\n    reset: () => void\r\n    count: number\r\n}\r\nconst Clicker = (props: TypeClicker) => {\r\n    return <div className='clicker'>\r\n\r\n        <div>\r\n            <button onClick={props.increase} disabled={props.count >= 5 ? true : false}\r\n                    className='btnInc'>Inc\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button onClick={props.reset} disabled={props.count === 0 ? true : false}\r\n                    className='btnReset'>Reset\r\n            </button>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\nexport default Clicker;","import React, {useState} from 'react';\nimport './App.css';\nimport Counter from \"./counter\";\nimport Clicker from \"./clicker\";\n\nfunction App() {\n    let [count, setCount] = useState<number>(0)\n    const inc = () => {\n        setCount(count + 1)\n    }\n    const reset = () => {\n\n        setCount(0)\n    }\n    return (<div className='Main'>\n            <Counter counter={count}/>\n            <Clicker increase={inc} reset={reset} count={count}/>\n        </div>\n\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}